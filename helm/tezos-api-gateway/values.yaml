# Default values for tezos-api-gateway-check-operation-status-worker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "k3d-registry.localhost:5000/tezos-api-gateway"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 9464

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: tezos-api-gateway.localhost
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

db:
  postgresqlDatabase: tezos_api_gateway
  postgresqlPassword: randompwd
  postgresqlUsername: tezos-service
  persistence:
    enabled: true
    size: 1Gi
  image:
    tag: 12.6.0-debian-10-r14

rabbitmq:
  service:
    type: LoadBalancer
  ingress:
    enabled: true
    certManager: true
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: tezos-api-gateway
  auth:
    tls:
      enabled: true
      existingSecretFullChain: true
    password: randompwd
    erlangCookie: 94155874a93041aca19378c9a4ee28ac

tezos-api-gateway-api:
  numberOfOperationConfirmation: 1

  postgresql:
    name: db
    postgresqlDatabase: tezos_api_gateway
    postgresqlPassword: randompwd
    postgresqlUsername: tezos-service

  rabbitmq:
    name: rabbitmq
    auth:
      password: randompwd

  vault:
    name: vault
    port: 8200

tezos-api-gateway-check-operation-status-worker:
  numberOfOperationConfirmation: 1

  postgresql:
    name: db
    postgresqlDatabase: tezos_api_gateway
    postgresqlPassword: randompwd
    postgresqlUsername: tezos-service

  rabbitmq:
    name: rabbitmq
    auth:
      password: randompwd

  vault:
    name: vault
    port: 8200

tezos-api-gateway-send-transactions-worker:
  numberOfOperationConfirmation: 1

  postgresql:
    name: db
    postgresqlDatabase: tezos_api_gateway
    postgresqlPassword: randompwd
    postgresqlUsername: tezos-service

  rabbitmq:
    name: rabbitmq
    auth:
      password: randompwd

  vault:
    name: vault
    port: 8200